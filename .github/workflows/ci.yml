name: CI Pipeline

on:
  push:
    branches:
      - 'feature/**'
      - 'bugfix/**'
      - 'hotfix/**'
      - 'release/**'
  pull_request:
    branches:
      - '**'

jobs:
  build-and-test:
    name: Build & Test Microservices
    runs-on: ubuntu-latest

    services:
      zookeeper:
        image: wurstmeister/zookeeper
        ports:
          - 2181:2181
      kafka:
        image: wurstmeister/kafka
        ports:
          - 9092:9092
        env:
          KAFKA_ADVERTISED_HOST_NAME: localhost
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        options: >-
          --health-cmd="curl -f localhost:9092 || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Run Tests for All Services
        run: |
          for dir in */ ; do
            if [ -f "$dir/pom.xml" ]; then
              echo "Running tests in $dir"
              mvn -f "$dir/pom.xml" clean test
            fi
          done

      - name: Build Docker Images
        run: |
          for dir in */ ; do
            if [ -f "$dir/Dockerfile" ]; then
              service_name=$(basename "$dir")
              echo "Building Docker image for $service_name"
              docker build -t "$service_name:latest" "$dir"
            fi
          done
